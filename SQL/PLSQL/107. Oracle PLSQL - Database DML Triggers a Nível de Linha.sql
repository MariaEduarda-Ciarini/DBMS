-- SEÇÃO 20 - DATABASE DML TRIGGERS
-- AULA 3 - DATABASE DML TRIGGERS A NÍVEL DE LINHA

-- DATABASE DML TRIGGERS A NÍVEL DE LINHA

-- CRIANDO A TABELA DE LOG DE AUDITORIA PARA A TABELA EMPLOYEES PARA A COLUNA SALARY

DROP TABLE EMPLOYEES_LOG;

CREATE TABLE EMPLOYEES_LOG
(
  EMPLOYEES_LOG_ID NUMBER(11) NOT NULL,
  DT_LOG DATE DEFAULT SYSDATE NOT NULL,
  USUARIO VARCHAR2(30),
  EVENTO CHAR(1) NOT NULL,
  EMPLOYEE_ID NUMBER(6) NOT NULL,
  SALARY_OLD NUMBER(8,2),
  SALARY_NEW NUMBER(8,2)
);

ALTER TABLE EMPLOYEES_LOG
ADD CONSTRAINT EMPLOYEES_LOG_PK PRIMARY KEY (EMPLOYEES_LOG_ID);

CREATE SEQUENCE EMPLOYEES_LOG_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE
NOMAXVALUE;

-- CRIANDO UMA TRIGGER QUE GERA LOG DE AUDITORIA PARA A TABELA EMPLOYEES PARA A COLUNA SALARY

CREATE OR REPLACE TRIGGER A_IUD_EMPLOYEES_R_TRG
  AFTER INSERT OR UPDATE OF SALARY OR DELETE 
  ON EMPLOYEES
  FOR EACH ROW
DECLARE
  VEVENTO EMPLOYEES_LOG.EVENTO%TYPE;
  VEMPLOYEE_ID EMPLOYEES_LOG.EMPLOYEE_ID%TYPE;
BEGIN
  CASE
    WHEN INSERTING THEN
      VEVENTO := 'I';
      VEMPLOYEE_ID := :NEW.EMPLOYEE_ID;
    WHEN UPDATING THEN
      VEVENTO := 'U';
      VEMPLOYEE_ID := :NEW.EMPLOYEE_ID;
    ELSE
      VEVENTO := 'D';
      VEMPLOYEE_ID := :OLD.EMPLOYEE_ID;
  END CASE;

  INSERT INTO EMPLOYEES_LOG
    (EMPLOYEES_LOG_ID, DT_LOG, USUARIO, EVENTO, EMPLOYEE_ID, SALARY_OLD, SALARY_NEW)
  VALUES
    (EMPLOYEES_LOG_SEQ.NEXTVAL, SYSDATE, USER, VEVENTO, VEMPLOYEE_ID, :OLD.SALARY, :NEW.SALARY);
END A_IUD_EMPLOYEES_R_TRG;

-- TESTANDO O DISPARO DA TRIGGER

UPDATE EMPLOYEES 
SET SALARY = SALARY * 1.5;

-- DESABILITANDO A TRIGGER B_IUD_VALIDA_HORARIO_EMPLOYEES_S_TRG PARA PODER TESTAR A TRIGGER FORA DO HORÁRIO COMERCIAL

ALTER TRIGGER B_IUD_VALIDA_HORARIO_EMPLOYEES_S_TRG DISABLE;

-- TESTANDO A TRIGGER

UPDATE EMPLOYEES 
SET SALARY = SALARY * 1.5;

-- CONSULTANDO A TABELA EMPLOYEES_LOG

SELECT *
FROM EMPLOYEES_LOG;

COMMIT;

-- LIMPANDO A TABELA DE LOG

DELETE FROM EMPLOYEES_LOG;

COMMIT;

SELECT *
FROM EMPLOYEES_LOG;

-- CLÁUSULA WHEN

CREATE OR REPLACE TRIGGER A_IUD_EMPLOYEES_R_TRG
  AFTER INSERT OR UPDATE OF SALARY OR DELETE 
  ON EMPLOYEES
  FOR EACH ROW
  WHEN (NEW.JOB_ID <> 'AD_PRES')
DECLARE
  VEVENTO EMPLOYEES_LOG.EVENTO%TYPE;
  VEMPLOYEE_ID EMPLOYEES_LOG.EMPLOYEE_ID%TYPE;
BEGIN
  CASE
    WHEN INSERTING THEN
      VEVENTO := 'I';
      VEMPLOYEE_ID := :NEW.EMPLOYEE_ID;
    WHEN UPDATING THEN
      VEVENTO := 'U';
      VEMPLOYEE_ID := :NEW.EMPLOYEE_ID;
    ELSE
      VEVENTO := 'D';
      VEMPLOYEE_ID := :OLD.EMPLOYEE_ID;
  END CASE;

  INSERT INTO EMPLOYEES_LOG
    (EMPLOYEES_LOG_ID, DT_LOG, USUARIO, EVENTO, EMPLOYEE_ID, SALARY_OLD, SALARY_NEW)
  VALUES
    (EMPLOYEES_LOG_SEQ.NEXTVAL, SYSDATE, USER, VEVENTO, VEMPLOYEE_ID, :OLD.SALARY, :NEW.SALARY);
END A_IUD_EMPLOYEES_R_TRG;

-- TESTANDO A TRIGGER

UPDATE EMPLOYEES 
SET SALARY = SALARY * 1.5;

SELECT *
FROM EMPLOYEES_LOG;

COMMIT;
